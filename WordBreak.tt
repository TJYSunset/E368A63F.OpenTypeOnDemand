<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#
        string LoadCharacters(string filename)
        {
            var bytes = Encoding.UTF32.GetBytes(File.ReadAllText(Host.ResolvePath($"WordBreak.{filename}.txt"),
                Encoding.UTF8));
            var utf32 = new uint[bytes.Length / (sizeof(uint) / sizeof(byte))];
            Buffer.BlockCopy(bytes, 0, utf32, 0, bytes.Length);
            return string.Join(", ",
                utf32.Select(x => $"0x{x:X}"));
        }

#>
// @formatter:off

using System.CodeDom.Compiler;

namespace E368A63F.FreeTypeOnDemand
{
    [GeneratedCode("T4", "N/A")]
    internal static partial class WordBreak
    {
        public static readonly uint[] BreakAfter =
        {
            <#= LoadCharacters("BreakAfter") #>
        };
        public static readonly uint[] BreakBefore =
        {
            <#= LoadCharacters("BreakBefore") #>
        };
        public static readonly uint[] NoBreakAfter =
        {
            <#= LoadCharacters("NoBreakAfter") #>
        };
        public static readonly uint[] NoBreakBefore =
        {
            <#= LoadCharacters("NoBreakBefore") #>
        };
    }
}